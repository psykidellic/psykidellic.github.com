<?xml version="1.0" encoding="UTF-8"?>
<feed
  xmlns="http://www.w3.org/2005/Atom"
  xmlns:thr="http://purl.org/syndication/thread/1.0"
  xml:lang="en"
   >
  <title type="text">psykidellic's blog</title>
  <subtitle type="text">everything in general</subtitle>

  <updated>2011-10-14T16:42:17Z</updated>
  <generator uri="http://blogofile.com/">Blogofile</generator>

  <link rel="alternate" type="text/html" href="http://blog.riteshn.com/" />
  <id>http://blog.riteshn.com//feed/atom/</id>
  <link rel="self" type="application/atom+xml" href="http://blog.riteshn.com//feed/atom/" />
  <entry>
    <author>
      <name></name>
      <uri>http://blog.riteshn.com/</uri>
    </author>
    <title type="html"><![CDATA[Finding an item based on computed value]]></title>
    <link rel="alternate" type="text/html" href="http://blog.riteshn.com/2011/06/08/finding-an-item-based-on-computed-value" />
    <id>http://blog.riteshn.com/2011/06/08/finding-an-item-based-on-computed-value</id>
    <updated>2011-06-08T00:20:00Z</updated>
    <published>2011-06-08T00:20:00Z</published>
    <category scheme="http://blog.riteshn.com/" term="python" />
    <summary type="html"><![CDATA[Finding an item based on computed value]]></summary>
    <content type="html" xml:base="http://blog.riteshn.com/2011/06/08/finding-an-item-based-on-computed-value"><![CDATA[<div class="document">
<p>Recently, at work I had to implement some code which had the pattern:</p>


<div class="pygments_murphy"><pre><span class="n">found</span> <span class="o">=</span> <span class="bp">None</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">foo</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">bar</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">==</span> <span class="n">baz</span><span class="p">:</span>
                <span class="n">found</span> <span class="o">=</span> <span class="n">x</span>
</pre></div>



<p>One could do this in a more Pythonic way as:</p>


<div class="pygments_murphy"><pre><span class="k">try</span><span class="p">:</span>
    <span class="n">found</span> <span class="o">=</span> <span class="nb">next</span><span class="p">(</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">foo</span> <span class="k">if</span> <span class="n">bar</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">==</span> <span class="n">baz</span><span class="p">)</span>
<span class="k">except</span> <span class="ne">StopIteration</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
    <span class="n">found</span> <span class="o">=</span> <span class="bp">None</span>
</pre></div>



<p><a class="reference external" href="http://articles.slicehost.com/2009/3/5/ubuntu-intrepid-nginx-configuration">http://articles.slicehost.com/2009/3/5/ubuntu-intrepid-nginx-configuration</a>
<a class="reference external" href="http://articles.slicehost.com/2007/12/12/ubuntu-gutsy-nginx-config-layout">http://articles.slicehost.com/2007/12/12/ubuntu-gutsy-nginx-config-layout</a></p>
<p><a class="reference external" href="http://www.directadmin.com/forum/archive/index.php/t-24452.html">http://www.directadmin.com/forum/archive/index.php/t-24452.html</a></p>
</div>
]]></content>
  </entry>
  <entry>
    <author>
      <name></name>
      <uri>http://blog.riteshn.com/</uri>
    </author>
    <title type="html"><![CDATA[Finding an item based on computed value]]></title>
    <link rel="alternate" type="text/html" href="http://blog.riteshn.com/2011/06/08/finding-an-item-based-on-computed-value" />
    <id>http://blog.riteshn.com/2011/06/08/finding-an-item-based-on-computed-value</id>
    <updated>2011-06-08T00:20:00Z</updated>
    <published>2011-06-08T00:20:00Z</published>
    <category scheme="http://blog.riteshn.com/" term="python" />
    <summary type="html"><![CDATA[Finding an item based on computed value]]></summary>
    <content type="html" xml:base="http://blog.riteshn.com/2011/06/08/finding-an-item-based-on-computed-value"><![CDATA[<div class="document">
<p>Recently, at work I had to implement some code which had the pattern:</p>


<div class="pygments_murphy"><pre><span class="n">found</span> <span class="o">=</span> <span class="bp">None</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">foo</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">bar</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">==</span> <span class="n">baz</span><span class="p">:</span>
                <span class="n">found</span> <span class="o">=</span> <span class="n">x</span>
</pre></div>



<p>One could do this in a more Pythonic way as:</p>


<div class="pygments_murphy"><pre><span class="k">try</span><span class="p">:</span>
    <span class="n">found</span> <span class="o">=</span> <span class="nb">next</span><span class="p">(</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">foo</span> <span class="k">if</span> <span class="n">bar</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">==</span> <span class="n">baz</span><span class="p">)</span>
<span class="k">except</span> <span class="ne">StopIteration</span><span class="p">,</span> <span class="n">e</span><span class="p">:</span>
    <span class="n">found</span> <span class="o">=</span> <span class="bp">None</span>
</pre></div>



</div>
]]></content>
  </entry>
</feed>
